-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity algo_unpacked_pool_op_ap_fixed_16_6_5_3_0_9_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of algo_unpacked_pool_op_ap_fixed_16_6_5_3_0_9_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv40_E38E4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000011100011100011100100";

attribute shreg_extract : string;
    signal add_ln712_2_fu_160_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_2_reg_279 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln712_6_fu_196_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln712_6_reg_284 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_reg_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_294_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_294_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_294_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1201_fu_226_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln1201_reg_300 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_2_reg_305 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln712_fu_116_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln712_1_fu_124_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln712_2_fu_132_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln712_1_fu_96_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln712_fu_92_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln712_fu_140_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln712_2_fu_100_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln712_3_fu_104_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln712_1_fu_150_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln712_7_fu_156_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_6_fu_146_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_4_fu_108_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln712_5_fu_112_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln712_3_fu_166_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln712_1_fu_128_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln712_2_fu_136_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln712_4_fu_176_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln712_3_fu_182_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln712_fu_120_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln712_5_fu_186_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln712_4_fu_192_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_9_fu_172_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_10_fu_205_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln712_8_fu_202_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln712_7_fu_208_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln1201_fu_238_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_1_fu_243_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1201_fu_253_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1201_1_fu_259_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_271_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal y_V_fu_265_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_271_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal p_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read1_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read3_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read4_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read5_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read6_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read7_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_read8_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component algo_unpacked_mul_mul_19s_20ns_40_4_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    mul_mul_19s_20ns_40_4_0_U592 : component algo_unpacked_mul_mul_19s_20ns_40_4_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln712_7_fu_208_p2,
        din1 => grp_fu_271_p1,
        ce => grp_fu_271_ce,
        dout => grp_fu_271_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add_ln712_2_reg_279 <= add_ln712_2_fu_160_p2;
                add_ln712_6_reg_284 <= add_ln712_6_fu_196_p2;
                tmp_2_reg_305 <= grp_fu_271_p2(38 downto 23);
                tmp_reg_294 <= add_ln712_7_fu_208_p2(18 downto 18);
                tmp_reg_294_pp0_iter2_reg <= tmp_reg_294;
                tmp_reg_294_pp0_iter3_reg <= tmp_reg_294_pp0_iter2_reg;
                tmp_reg_294_pp0_iter4_reg <= tmp_reg_294_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= y_V_fu_265_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                p_read1_int_reg <= p_read1;
                p_read2_int_reg <= p_read2;
                p_read3_int_reg <= p_read3;
                p_read4_int_reg <= p_read4;
                p_read5_int_reg <= p_read5;
                p_read6_int_reg <= p_read6;
                p_read7_int_reg <= p_read7;
                p_read8_int_reg <= p_read8;
                p_read_int_reg <= p_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_294_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                trunc_ln1201_reg_300 <= trunc_ln1201_fu_226_p1;
            end if;
        end if;
    end process;
    add_ln712_1_fu_150_p2 <= std_logic_vector(signed(sext_ln712_2_fu_100_p1) + signed(sext_ln712_3_fu_104_p1));
    add_ln712_2_fu_160_p2 <= std_logic_vector(signed(sext_ln712_7_fu_156_p1) + signed(sext_ln712_6_fu_146_p1));
    add_ln712_3_fu_166_p2 <= std_logic_vector(signed(sext_ln712_4_fu_108_p1) + signed(sext_ln712_5_fu_112_p1));
    add_ln712_4_fu_176_p2 <= std_logic_vector(unsigned(zext_ln712_1_fu_128_p1) + unsigned(zext_ln712_2_fu_136_p1));
    add_ln712_5_fu_186_p2 <= std_logic_vector(unsigned(zext_ln712_3_fu_182_p1) + unsigned(zext_ln712_fu_120_p1));
    add_ln712_6_fu_196_p2 <= std_logic_vector(unsigned(zext_ln712_4_fu_192_p1) + unsigned(sext_ln712_9_fu_172_p1));
    add_ln712_7_fu_208_p2 <= std_logic_vector(signed(sext_ln712_10_fu_205_p1) + signed(sext_ln712_8_fu_202_p1));
    add_ln712_fu_140_p2 <= std_logic_vector(signed(sext_ln712_1_fu_96_p1) + signed(sext_ln712_fu_92_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(y_V_fu_265_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= y_V_fu_265_p3;
        else 
            ap_return <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_271_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_271_ce <= ap_const_logic_1;
        else 
            grp_fu_271_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_271_p1 <= ap_const_lv40_E38E4(20 - 1 downto 0);
    select_ln1201_fu_253_p3 <= 
        tmp_1_fu_243_p4 when (tmp_reg_294_pp0_iter4_reg(0) = '1') else 
        tmp_2_reg_305;
        sext_ln712_10_fu_205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_6_reg_284),19));

        sext_ln712_1_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read3_int_reg),17));

        sext_ln712_2_fu_100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read6_int_reg),17));

        sext_ln712_3_fu_104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read1_int_reg),17));

        sext_ln712_4_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read4_int_reg),17));

        sext_ln712_5_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read7_int_reg),17));

        sext_ln712_6_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_fu_140_p2),18));

        sext_ln712_7_fu_156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_1_fu_150_p2),18));

        sext_ln712_8_fu_202_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_2_reg_279),19));

        sext_ln712_9_fu_172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_3_fu_166_p2),18));

        sext_ln712_fu_92_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_int_reg),17));

    sub_ln1201_1_fu_259_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(select_ln1201_fu_253_p3));
    sub_ln1201_fu_238_p2 <= std_logic_vector(unsigned(ap_const_lv39_0) - unsigned(trunc_ln1201_reg_300));
    tmp_1_fu_243_p4 <= sub_ln1201_fu_238_p2(38 downto 23);
    trunc_ln1201_fu_226_p1 <= grp_fu_271_p2(39 - 1 downto 0);
    trunc_ln712_1_fu_124_p1 <= p_read5_int_reg(9 - 1 downto 0);
    trunc_ln712_2_fu_132_p1 <= p_read8_int_reg(9 - 1 downto 0);
    trunc_ln712_fu_116_p1 <= p_read2_int_reg(9 - 1 downto 0);
    y_V_fu_265_p3 <= 
        sub_ln1201_1_fu_259_p2 when (tmp_reg_294_pp0_iter4_reg(0) = '1') else 
        tmp_2_reg_305;
    zext_ln712_1_fu_128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln712_1_fu_124_p1),10));
    zext_ln712_2_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln712_2_fu_132_p1),10));
    zext_ln712_3_fu_182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_4_fu_176_p2),11));
    zext_ln712_4_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln712_5_fu_186_p2),18));
    zext_ln712_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln712_fu_116_p1),11));
end behav;
